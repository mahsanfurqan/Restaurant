// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_boilerplate/test/modules/menu/data/data_sources/local/menu_local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_boilerplate/modules/menu/data/data_sources/local/db/category_dao.dart'
    as _i5;
import 'package:flutter_boilerplate/modules/menu/data/data_sources/local/db/menu_dao.dart'
    as _i2;
import 'package:flutter_boilerplate/modules/menu/data/data_sources/local/entities/category_entity.dart'
    as _i6;
import 'package:flutter_boilerplate/modules/menu/data/data_sources/local/entities/menu_entity.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MenuDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMenuDao extends _i1.Mock implements _i2.MenuDao {
  MockMenuDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.MenuEntity>> findAll() => (super.noSuchMethod(
        Invocation.method(
          #findAll,
          [],
        ),
        returnValue: _i3.Future<List<_i4.MenuEntity>>.value(<_i4.MenuEntity>[]),
      ) as _i3.Future<List<_i4.MenuEntity>>);

  @override
  _i3.Future<_i4.MenuEntity?> findById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #findById,
          [id],
        ),
        returnValue: _i3.Future<_i4.MenuEntity?>.value(),
      ) as _i3.Future<_i4.MenuEntity?>);

  @override
  _i3.Future<List<int>> insertAll(List<_i4.MenuEntity>? menus) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAll,
          [menus],
        ),
        returnValue: _i3.Future<List<int>>.value(<int>[]),
      ) as _i3.Future<List<int>>);

  @override
  _i3.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [CategoryDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryDao extends _i1.Mock implements _i5.CategoryDao {
  MockCategoryDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.CategoryEntity>> findAll() => (super.noSuchMethod(
        Invocation.method(
          #findAll,
          [],
        ),
        returnValue:
            _i3.Future<List<_i6.CategoryEntity>>.value(<_i6.CategoryEntity>[]),
      ) as _i3.Future<List<_i6.CategoryEntity>>);

  @override
  _i3.Future<_i6.CategoryEntity?> findById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #findById,
          [id],
        ),
        returnValue: _i3.Future<_i6.CategoryEntity?>.value(),
      ) as _i3.Future<_i6.CategoryEntity?>);

  @override
  _i3.Future<List<int>> insertAll(List<_i6.CategoryEntity>? categories) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAll,
          [categories],
        ),
        returnValue: _i3.Future<List<int>>.value(<int>[]),
      ) as _i3.Future<List<int>>);

  @override
  _i3.Future<void> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
