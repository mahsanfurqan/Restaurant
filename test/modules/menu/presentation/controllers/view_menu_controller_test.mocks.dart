// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_boilerplate/test/modules/menu/presentation/controllers/view_menu_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:flutter_boilerplate/core/common/failures.dart' as _i5;
import 'package:flutter_boilerplate/modules/menu/data/models/category_model.dart'
    as _i6;
import 'package:flutter_boilerplate/modules/menu/data/models/menu_model.dart'
    as _i8;
import 'package:flutter_boilerplate/modules/menu/data/models/menu_request_model.dart'
    as _i9;
import 'package:flutter_boilerplate/modules/menu/data/models/restaurant_model.dart'
    as _i11;
import 'package:flutter_boilerplate/modules/menu/data/models/storage_model.dart'
    as _i10;
import 'package:flutter_boilerplate/modules/menu/data/repositories/menu_repository.dart'
    as _i3;
import 'package:flutter_boilerplate/shared/responses/base_response.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MenuRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMenuRepository extends _i1.Mock implements _i3.MenuRepository {
  MockMenuRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.CategoryModel>>>
      fetchCategories() => (super.noSuchMethod(
            Invocation.method(
              #fetchCategories,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.CategoryModel>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.CategoryModel>>(
              this,
              Invocation.method(
                #fetchCategories,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.CategoryModel>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.BaseResponse<_i8.MenuModel>>> createMenu(
          _i9.MenuRequestModel? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMenu,
          [body],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i7.BaseResponse<_i8.MenuModel>>>.value(
            _FakeEither_0<_i5.Failure, _i7.BaseResponse<_i8.MenuModel>>(
          this,
          Invocation.method(
            #createMenu,
            [body],
          ),
        )),
      ) as _i4
          .Future<_i2.Either<_i5.Failure, _i7.BaseResponse<_i8.MenuModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.MenuModel>>> fetchMenus({
    bool? refresh = false,
    bool? loadMore = false,
    int? page = 1,
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMenus,
          [],
          {
            #refresh: refresh,
            #loadMore: loadMore,
            #page: page,
            #limit: limit,
          },
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i8.MenuModel>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.MenuModel>>(
          this,
          Invocation.method(
            #fetchMenus,
            [],
            {
              #refresh: refresh,
              #loadMore: loadMore,
              #page: page,
              #limit: limit,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.MenuModel>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure,
          _i7.BaseResponse<_i10.StorageUploadResponseModel>>> uploadFile({
    required String? filePath,
    required String? folder,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [],
          {
            #filePath: filePath,
            #folder: folder,
          },
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure,
                    _i7.BaseResponse<_i10.StorageUploadResponseModel>>>.value(
            _FakeEither_0<_i5.Failure,
                _i7.BaseResponse<_i10.StorageUploadResponseModel>>(
          this,
          Invocation.method(
            #uploadFile,
            [],
            {
              #filePath: filePath,
              #folder: folder,
            },
          ),
        )),
      ) as _i4.Future<
          _i2.Either<_i5.Failure,
              _i7.BaseResponse<_i10.StorageUploadResponseModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> deleteMenu(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMenu,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #deleteMenu,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.BaseResponse<_i11.RestaurantModel>>>
      getRestaurant(int? id) => (super.noSuchMethod(
            Invocation.method(
              #getRestaurant,
              [id],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i7.BaseResponse<_i11.RestaurantModel>>>.value(
                _FakeEither_0<_i5.Failure,
                    _i7.BaseResponse<_i11.RestaurantModel>>(
              this,
              Invocation.method(
                #getRestaurant,
                [id],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, _i7.BaseResponse<_i11.RestaurantModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.BaseResponse<_i11.RestaurantModel>>>
      updateRestaurant(
    int? id,
    Map<String, dynamic>? body,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #updateRestaurant,
              [
                id,
                body,
              ],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i7.BaseResponse<_i11.RestaurantModel>>>.value(
                _FakeEither_0<_i5.Failure,
                    _i7.BaseResponse<_i11.RestaurantModel>>(
              this,
              Invocation.method(
                #updateRestaurant,
                [
                  id,
                  body,
                ],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, _i7.BaseResponse<_i11.RestaurantModel>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.MenuModel>>> refreshMenus() =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshMenus,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i8.MenuModel>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.MenuModel>>(
          this,
          Invocation.method(
            #refreshMenus,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.MenuModel>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.BaseResponse<_i8.MenuModel>>> updateMenu(
    int? id,
    _i9.MenuRequestModel? request,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMenu,
          [
            id,
            request,
          ],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.Failure, _i7.BaseResponse<_i8.MenuModel>>>.value(
            _FakeEither_0<_i5.Failure, _i7.BaseResponse<_i8.MenuModel>>(
          this,
          Invocation.method(
            #updateMenu,
            [
              id,
              request,
            ],
          ),
        )),
      ) as _i4
          .Future<_i2.Either<_i5.Failure, _i7.BaseResponse<_i8.MenuModel>>>);

  @override
  _i4.Future<bool> hasCachedData() => (super.noSuchMethod(
        Invocation.method(
          #hasCachedData,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
